<?php

namespace ContainerJa6XIpx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUserControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Controller\UserController' shared autowired service.
     *
     * @return \App\Controller\UserController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/UserController.php';
        include_once \dirname(__DIR__, 4).'/src/UseCase/User/CreateUserUseCase.php';
        include_once \dirname(__DIR__, 4).'/src/Mailer/UserMailer.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/mailer/MailerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/mailer/Mailer.php';
        include_once \dirname(__DIR__, 4).'/src/UseCase/User/PasswordUseCase.php';
        include_once \dirname(__DIR__, 4).'/src/UseCase/User/UpdateUserUseCase.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));
        $b = ($container->privates['App\\Repository\\UserRepository'] ?? $container->load('getUserRepositoryService'));
        $c = new \App\UseCase\User\PasswordUseCase(($container->privates['security.user_password_hasher'] ?? $container->load('getSecurity_UserPasswordHasherService')));

        $container->services['App\\Controller\\UserController'] = $instance = new \App\Controller\UserController($a, $b, new \App\UseCase\User\CreateUserUseCase($a, $b, new \App\Mailer\UserMailer(new \Symfony\Component\Mailer\Mailer(($container->privates['mailer.transports'] ?? $container->load('getMailer_TransportsService')), NULL, ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container))), $container->getEnv('MAIL_HOST')), $c), new \App\UseCase\User\UpdateUserUseCase($c));

        $instance->setContainer(($container->privates['.service_locator.2.N18_J'] ?? $container->load('get_ServiceLocator_2_N18JService'))->withContext('App\\Controller\\UserController', $container));

        return $instance;
    }
}
